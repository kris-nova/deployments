apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  generation: 1
  labels:
    app: unifi
  name: unifi
  namespace: public
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: unifi
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: unifi
    spec:
      volumes:
        - name: config
          hostPath:
            path: /data/config
      containers:
        - image: krisnova/unifi:latest
          securityContext:
            privileged: true
          env:
            - name: GUID
              value: "1000"
            - name: PUID
              value: "1000"
#          envFrom:
#            - secretRef:
#                name: deployments
#                optional: false
          imagePullPolicy: Always
          name: unifi
          ports:
            # STUN port
            - containerPort: 3478
              protocol: UDP
            # Access Point Discovery
            - containerPort: 10001
              protocol: UDP
            # API
            - containerPort: 8080
              protocol: UDP
            # Dashboard
            - containerPort: 8443
              protocol: UDP
          volumeMounts:
          - mountPath: /config
            name: config
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: unifi
  name: unifi
  namespace: public
spec:
  externalTrafficPolicy: Cluster
  ports:
    - nodePort: 30004
      name: "https"
      port: 8443
      protocol: TCP
      targetPort: 8443
    - nodePort: 30003
      name: "http"
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: unifi
  sessionAffinity: None
  type: NodePort